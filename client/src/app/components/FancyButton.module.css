/**********************************************************************************************************************/

@property --gradientColor1 {
  syntax: "<color>";
  inherits: true;
  initial-value: transparent;
}

@property --gradientColor2 {
  syntax: "<color>";
  inherits: true;
  initial-value: transparent;
}

@property --gradientColor3 {
  syntax: "<color>";
  inherits: true;
  initial-value: transparent;
}

/**********************************************************************************************************************/

.button {
  --setWidth: "";
  --setHeight: "";
  --totalWidth: "";
  --totalHeight: "";

  --borderWidth: "";
  --borderRadius: "";

  --contentWidth: calc(var(--totalWidth) - (2 * var(--borderWidth)));
  --contentHeight: calc(var(--totalHeight) - (2 * var(--borderWidth)));

  --fontSizeRatio: 2/3;
  --freeSpaceRatio: calc(1 - var(--fontSizeRatio));

  --fontSize: calc(var(--fontSizeRatio) * var(--contentHeight));
  --freeSpace: calc(var(--freeSpaceRatio) * var(--contentHeight));
  --lineHeight: calc(var(--fontSize) + (1/3 * var(--freeSpace)));
  --hPadding: calc(1/2 * var(--freeSpace));

  --fontWeight: bold;
  --colorOpacity: 0.7;
  --backgroundOpacity: 0.85;
  --gradientDirection: 315deg;
  --normalColor1: hsl(0, 0%, 20%);
  --normalColor2: hsl(0, 0%, 20%);
  --normalColor3: hsl(0, 0%, 20%);
  --activeColor1: hsl(0, 0%, 40%);
  --activeColor2: hsl(0, 0%, 40%);
  --activeColor3: hsl(0, 0%, 40%);
  --gradientColor1: var(--normalColor1);
  --gradientColor2: var(--normalColor2);
  --gradientColor3: var(--normalColor3);
}

/**********************************************************************************************************************/

.button {
  width: var(--setWidth, 0);
  height: var(--setHeight, 0);
  position: relative;
  display: grid;
  place-items: center;
  cursor: pointer;
  border-radius: var(--borderRadius);
  background-color: black;
}

/**********************************************************************************************************************/

.button:hover, .button:focus, .button:active, .button.pressed {
  --gradientColor1: var(--activeColor1);
  --gradientColor2: var(--activeColor2);
  --gradientColor3: var(--activeColor3);
  --backgroundOpacity: 0.7;
}

.button:hover, .button:focus {
  --colorOpacity: 1;
}
.button:active, .button.pressed {
  --colorOpacity: 0.5;
}

/**********************************************************************************************************************/

/* All Layers */
.layer {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
}

/* Border Layer */
.layer:nth-of-type(1) {
  background: linear-gradient(var(--gradientDirection), var(--gradientColor1), var(--gradientColor2), var(--gradientColor3));
  opacity: var(--colorOpacity);
  transition:
    --gradientColor1 100ms ease-in-out,
    --gradientColor2 300ms ease-in-out,
    --gradientColor3 500ms ease-in-out,
    opacity 100ms ease-in-out;
}

/* Bakcground Layer */
.layer:nth-of-type(2) {
  position: relative;
  padding: 0 var(--hPadding);
  border: var(--borderWidth) solid transparent;
  background-color: black;
  background-clip: padding-box;
  display: grid;
  place-items: center;
  opacity: var(--backgroundOpacity);
  transition: opacity 100ms ease-in-out;
  overflow: hidden;
}

/* Content */
.layer:nth-of-type(2) > i, .layer:nth-of-type(2) > span {
  width: 100%;
  background: linear-gradient(var(--gradientDirection), var(--gradientColor1), var(--gradientColor2), var(--gradientColor3));
  background-clip: text;
  color: transparent;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: var(--fontSize);
  font-weight: var(--fontWeight);
  line-height: var(--lineHeight);
  opacity: var(--colorOpacity);
  transition:
    --gradientColor1 100ms ease-in-out,
    --gradientColor2 300ms ease-in-out,
    --gradientColor3 500ms ease-in-out,
    opacity 100ms ease-in-out;
}

/**********************************************************************************************************************/
